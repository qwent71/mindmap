{
	"nodes":[
		{"id":"4d020d06defbd81e","type":"text","text":"**Kubernetes**","x":-134,"y":-79,"width":250,"height":60},
		{"id":"70147d1929b68f23","type":"text","text":" Сети","x":1324,"y":319,"width":250,"height":60},
		{"id":"f62f83f0b9673c07","type":"text","text":"### Ingress\n- Основная задача ingress заключается в том, чтобы определять правила маршрутизации трафика, поступающего на кластер Kubernetes, и направлять его к соответствующим сервисам.","x":2047,"y":710,"width":475,"height":185},
		{"id":"a7e7042dd67a72fe","type":"file","file":"kubernetes/img/ingress.png","x":1935,"y":986,"width":700,"height":323},
		{"id":"768b2867608508ef","type":"text","text":"**Маршрутизация HTTP/HTTPS трафика**: Ingress обычно используется для маршрутизации HTTP и HTTPS трафика. Он позволяет определять правила для различных хостов и путей.","x":2912,"y":722,"width":390,"height":161},
		{"id":"91ea9363d4baff95","type":"text","text":"**Ingress Resource**: Это объект в Kubernetes, который определяет правила маршрутизации трафика. В этом объекте указываются такие параметры, как хосты, пути и связанные с ними сервисы.","x":2912,"y":255,"width":369,"height":188},
		{"id":"9810bbcce334bef4","type":"text","text":"**Ingress Controller**: Это компонент, который управляет ingress ресурсами и реализует правила маршрутизации. Он слушает изменения ingress ресурсов и настраивает балансировщик нагрузки (например, NGINX, Traefik) для маршрутизации трафика.","x":2912,"y":477,"width":383,"height":223},
		{"id":"9bc9d051d8d83ba8","type":"text","text":"**TLS/SSL**: Ingress поддерживает настройку SSL/TLS для обеспечения безопасности трафика. Это позволяет настроить SSL сертификаты и использовать HTTPS для доступа к сервисам.","x":2913,"y":913,"width":370,"height":162},
		{"id":"77907ff8a3f4063c","type":"text","text":"**Базовая балансировка нагрузки**: Ingress контроллеры могут выполнять балансировку нагрузки между экземплярами сервисов, что улучшает доступность и производительность.","x":2912,"y":1112,"width":369,"height":172},
		{"id":"f9651a0a9f27b756","type":"text","text":"### **Service**\n- Неизменный Ip адрес\n- Лайфцикл с подом никак не связан","x":853,"y":603,"width":273,"height":155},
		{"id":"3e129a8b23a766cd","type":"text","text":"- **Управление репликами**: Deployment обеспечивает создание и поддержание определенного количества подов, запуская нужное количество экземпляров приложения.","x":-1798,"y":1145,"width":516,"height":143},
		{"id":"3ddfd91fb3e56bef","type":"text","text":"**Мониторинг состояния**: Deployment постоянно следит за состоянием подов и при необходимости восстанавливает их для достижения желаемого состояния.","x":-679,"y":1175,"width":488,"height":111},
		{"id":"751e633122d6813f","type":"text","text":"- **Обновления и откаты**: Deployment поддерживает обновления без простоя (rolling updates) и позволяет откатить изменения в случае ошибок.","x":-1194,"y":1182,"width":509,"height":106},
		{"id":"3f21ab437c765971","type":"text","text":"- **Масштабирование**: Deployment позволяет легко масштабировать приложения путем изменения количества реплик.","x":-119,"y":1182,"width":420,"height":104},
		{"id":"36d3b5beb8169f80","type":"text","text":"### Deploymets\nэто объект, который обеспечивает декларативное управление приложениями. С помощью Deployment можно описать желаемое состояние приложений (например, количество реплик, версия образа контейнера) и позволить Kubernetes автоматически достигать этого состояния и поддерживать его. Deployment управляет созданием и обновлением экземпляров приложений, обеспечивая возможность плавного обновления и отката\n","x":-879,"y":467,"width":660,"height":243},
		{"id":"3e6400659c6d5b84","type":"file","file":"kubernetes/img/global.png","x":20,"y":263,"width":524,"height":495},
		{"id":"f03f9fdc2215c12b","type":"text","text":"### Internal\n- Внутренний ip","x":1462,"y":1227,"width":300,"height":123},
		{"id":"6ee3f4ecc7fca767","type":"file","file":"kubernetes/img/service.png","x":931,"y":1182,"width":410,"height":213},
		{"id":"0dbaf166e6d991f0","type":"text","text":"### External\n- Открытый ip","x":522,"y":1227,"width":276,"height":123},
		{"id":"fbf285dbfffcd42b","type":"text","text":"### ClusterIpService - default\n- используется для обеспечения внутреннего доступа к приложениям в кластере. Он предоставляет доступ к сервису только внутри кластера, без внешнего доступа извне.","x":2840,"y":1703,"width":392,"height":210},
		{"id":"deaaf8cd63daed72","type":"file","file":"kubernetes/img/Pasted image 20240718150245.png","x":3232,"y":2116,"width":400,"height":243},
		{"id":"6899a773894d368b","type":"text","text":"### LoadBalancingService\n используется для предоставления внешнего доступа к сервисам внутри кластера, автоматически создавая внешний балансировщик нагрузки. Этот тип сервиса является более продвинутым вариантом, чем `NodePort`, и используется для обеспечения надежного и масштабируемого доступа к приложениям.","x":-1540,"y":1676,"width":520,"height":240},
		{"id":"70152dd31b0c0689","type":"text","text":"**Промежуточный шаг к более сложной конфигурации**:\n\n- **Вход в кластер через LoadBalancer**: `NodePort` часто используется как промежуточный шаг при настройке сервисов типа `LoadBalancer`, который сам использует `NodePort` под капотом для маршрутизации трафика.","x":992,"y":2283,"width":385,"height":321},
		{"id":"4433398e21c9c45f","type":"text","text":"### NodePortService\n- используется для предоставления доступа к сервису из внешнего мира на уровне узлов кластера. В отличие от `ClusterIP`, который ограничивает доступ только внутренней сетью кластера, `NodePort` позволяет внешним пользователям и системам подключаться к вашему сервису. Вот основные случаи, когда нужен `NodePort` сервис:","x":140,"y":1840,"width":526,"height":291},
		{"id":"defb77166ddc390d","type":"text","text":"**Прямой доступ к приложению извне**:\n\n- **Тестирование и отладка**: В случаях, когда необходимо предоставить доступ к приложению извне для целей тестирования или отладки, без необходимости настройки внешних балансировщиков нагрузки.\n- **Малые и простые приложения**: Для простых приложений, где требуется минимальная конфигурация для доступа извне, `NodePort` может быть удобным решением.","x":-543,"y":2311,"width":472,"height":329},
		{"id":"8a64420c40df7f7f","type":"text","text":"**Внешние системы, которые должны обращаться к подам через конкретные узлы**:\n\n- **API-шлюзы и прокси-серверы**: Внешние системы, такие как API-шлюзы или прокси-серверы, которые должны обращаться к конкретным узлам кластера, могут использовать `NodePort` для этого.","x":522,"y":2312,"width":356,"height":292},
		{"id":"a63bd30d15509b6c","type":"text","text":"**Доступ к приложению через статический порт**:\n\n- **Фиксированный порт**: Когда необходимо использовать определённый статический порт для доступа к приложению, `NodePort` позволяет назначить такой порт на каждом узле кластера.","x":32,"y":2324,"width":355,"height":300},
		{"id":"58d629d841389122","type":"file","file":"kubernetes/img/Pasted image 20240718151125.png","x":1744,"y":2487,"width":611,"height":275},
		{"id":"6544cb509ab709f4","type":"text","text":"### HeadlessService\n- когда вам нужно управлять поведением службы без использования встроенного балансировщика нагрузки или виртуального IP-адреса.\n","x":2609,"y":2531,"width":420,"height":187},
		{"id":"cb9d56078e32b083","type":"text","text":"**Кластеры с одноранговым взаимодействием (Peer-to-Peer)**:\n\n- **Кластеры данных**: Когда узлы кластера должны знать о каждом другом узле (например, Kafka, Zookeeper), `Headless Service` позволяет узлам находить друг друга и взаимодействовать напрямую.\n- **Прямое взаимодействие**: Системы, где необходимо прямое взаимодействие между подами для обмена данными или синхронизации состояния.","x":2077,"y":3028,"width":437,"height":336},
		{"id":"bef4fe9d24534697","type":"text","text":"**Приложения с пользовательской балансировкой нагрузки**:\n\n- **Пользовательская логика балансировки**: В случаях, когда необходимо реализовать собственную логику балансировки нагрузки или маршрутизации, `Headless Service` позволяет клиентам непосредственно взаимодействовать с подами, обходя встроенные механизмы Kubernetes.","x":2617,"y":3028,"width":419,"height":334},
		{"id":"4e770c681e8d78af","type":"text","text":"**Сервисы с состоянием (Stateful Services)**:\n\n- **StatefulSets**: При работе с StatefulSets, где важно, чтобы поды имели постоянные идентификаторы и хранилища, `Headless Service` позволяет клиентам напрямую обращаться к конкретным подам по их DNS-именам.\n- **Базы данных**: Такие базы данных, как Cassandra, MongoDB, ElasticSearch и другие распределенные базы данных, которые требуют прямого обращения к определенным нодам.","x":1511,"y":3032,"width":466,"height":332},
		{"id":"f3d6988f9bbbb579","type":"text","text":"**Поиск DNS без ClusterIP**:\n\n- **Сервисы без общего IP-адреса**: Если вы хотите, чтобы каждый под был доступен через собственный DNS-запись, а не через общий IP-адрес сервиса, `Headless Service` предоставляет такую возможность.","x":3157,"y":3062,"width":382,"height":266},
		{"id":"48ee7df233834de6","type":"text","text":"- **Обеспечение внешнего доступа**:\n    \n    - Когда нужно, чтобы приложение было доступно из интернета или внешней сети, и требуется автоматическое управление входящим трафиком.","x":-2800,"y":2098,"width":400,"height":226},
		{"id":"a3ee98d05d9a5391","type":"text","text":"**Автоматическое управление балансировкой нагрузки**:\n\n- Когда необходимо распределять входящий трафик между несколькими подами, обеспечивая высокую доступность и отказоустойчивость приложения.","x":-2226,"y":2098,"width":428,"height":226},
		{"id":"23a448b91ea3750e","type":"text","text":"**Упрощение конфигурации внешнего доступа**:\n\n- `LoadBalancer` сервис позволяет автоматизировать процесс создания и настройки балансировщиков нагрузки, минимизируя ручную работу.","x":-1629,"y":2113,"width":389,"height":211},
		{"id":"440c3ef48fcc563f","type":"text","text":"**Поддержка различных облачных провайдеров**:\n\n- В облачных средах (например, AWS, Google Cloud, Azure) `LoadBalancer` сервис автоматически создает и настраивает внешний балансировщик нагрузки, используя API соответствующего провайдера.","x":-1119,"y":2094,"width":440,"height":230},
		{"id":"3ae8bac90fa1e6ce","type":"text","text":"### Namespace\nлогическое разделение внутри кластера, которое позволяет организовывать и управлять ресурсами, такими как поды, сервисы и конфигурации. Он используется для изоляции ресурсов между различными проектами, командами или окружениями.","x":-2090,"y":-105,"width":426,"height":270},
		{"id":"c7391aea8029446e","type":"text","text":"- **Постоянное хранилище**: Каждый под может иметь привязанное к нему постоянное хранилище (PersistentVolume), которое сохраняет данные между перезапусками подов.","x":-3052,"y":794,"width":387,"height":160},
		{"id":"671dd9c62ce45274","type":"text","text":"- **Управление обновлениями**: StatefulSet поддерживает контролируемое обновление подов, обеспечивая минимальное влияние на работу приложения.","x":-3052,"y":1014,"width":387,"height":160},
		{"id":"016689b1b21be44b","type":"text","text":"### StatefulSet\nэто объект в Kubernetes, используемый для управления состоянием и развертыванием приложений, которые требуют сохранения состояния. StatefulSet обеспечивает стабильную идентичность и постоянное хранилище для каждого пода, что делает его подходящим для развертывания таких приложений, как базы данных, кэш-сервисы и другие приложения, которые требуют сохранения состояния между перезапусками.\n\n","x":-2350,"y":597,"width":550,"height":277},
		{"id":"d2f339f29628d7ef","type":"text","text":"- **Порядковый запуск и остановка**: Поды создаются и удаляются в определенном порядке. StatefulSet гарантирует, что поды будут запускаться или останавливаться один за другим, а не все одновременно.","x":-3052,"y":574,"width":387,"height":180},
		{"id":"1e6da028a27c4e86","type":"file","file":"kubernetes/img/statefulset.png","x":-2350,"y":1014,"width":399,"height":161},
		{"id":"6d9307044468ca3a","type":"text","text":"- **Стабильная идентичность подов**: Каждый под в StatefulSet имеет постоянное уникальное имя, которое сохраняется при перезапусках и масштабировании.","x":-3052,"y":357,"width":387,"height":160},
		{"id":"668f50532e8bb94e","type":"text","text":"**Pod**\n- Абстракция над контейнером\n- Используется 1 приложение в для пода\n- Каждый под дает свой Ip адресс","x":485,"y":-2100,"width":392,"height":160},
		{"id":"5594d1563298c0ac","type":"text","text":"Проблема :\nПосле пересоздания контейнера его ip меняется, поэтому над ним нужно использовать service","x":768,"y":-2420,"width":326,"height":166},
		{"id":"22343fce03233bc0","type":"file","file":"kubernetes/img/pod.png","x":28,"y":-2560,"width":400,"height":279},
		{"id":"5183697fcc4bcf11","type":"text","text":"### CotnainerRuntime\n- Программное обеспечение, которое запускает контейнеры. Примеры включают Docker, containerd и другие OCI-совместимые контейнерные рантаймы. Контейнерный рантайм отвечает за запуск, остановку и управление жизненным циклом контейнеров.","x":-1330,"y":-2593,"width":379,"height":297},
		{"id":"c75cc548fae8f3a2","type":"text","text":"### **Kube-proxy**:\n\n- Сетевой прокси, работающий на каждом узле. Он управляет сетевыми правилами и обеспечивает сетевую связь между подами, как внутри узла, так и между разными узлами.","x":-1854,"y":-2593,"width":362,"height":248},
		{"id":"b410ca2c3dd33884","type":"text","text":"### **Сетевые плагины (CNI)**:\n\n- Плагины для сетевой интеграции, обеспечивающие возможность подключения подов к сетям. Они управляют созданием и настройкой виртуальных сетевых интерфейсов и маршрутов.","x":-861,"y":-2593,"width":372,"height":263},
		{"id":"fac02a87d2c32066","type":"file","file":"kubernetes/img/secret.png","x":1852,"y":-958,"width":400,"height":129},
		{"id":"1f8f01cdd578c072","type":"text","text":"**Helm**:\n\n- Это менеджер пакетов для Kubernetes, который позволяет упрощать деплоймент, обновление и управление приложениями.","x":2016,"y":-687,"width":409,"height":169},
		{"id":"91f694e8784b43d2","type":"text","text":"**Chart**:\n\n- Это коллекция файлов, описывающих Kubernetes ресурсы, необходимые для развертывания приложения. Chart включает шаблоны YAML, которые могут быть параметризованы.","x":2016,"y":-474,"width":409,"height":185},
		{"id":"647c500977e799c4","type":"text","text":"**Release**:\n\n- Это конкретный экземпляр Chart, развернутый в Kubernetes кластере. Один Chart может быть установлен несколько раз с разными параметрами, создавая разные Releases.","x":2016,"y":-246,"width":409,"height":227},
		{"id":"4fc9fc885510ead4","type":"text","text":"### ConfigMap\n- **Хранение конфигурационных данных**: ConfigMap может содержать любую текстовую информацию, необходимую для конфигурации приложений.\n- **Передача данных в контейнеры**: Конфигурационные данные из ConfigMap могут передаваться в контейнеры как переменные окружения, аргументы командной строки или файлы.\n- **Обновление конфигурации**: ConfigMap позволяет обновлять конфигурационные данные без необходимости пересборки и деплоя приложений.\n- **Разделение конфигурации и кода**: ConfigMap помогает отделить конфигурационные данные от кода, что облегчает управление и администрирование приложений.","x":1004,"y":-1279,"width":740,"height":320},
		{"id":"d91195adb900b074","type":"file","file":"kubernetes/img/configMap.png","x":1034,"y":-1592,"width":679,"height":227},
		{"id":"f93078df170b53ad","type":"text","text":"### Конфиги","x":576,"y":-534,"width":250,"height":60},
		{"id":"462c8495c65806b2","type":"text","text":"Дефолтные неймспейсы","x":-3052,"y":-148,"width":250,"height":60},
		{"id":"9d55bb54275a2e75","type":"text","text":"### kube-node-lease\n\n- **Описание**: Этот неймспейс используется для хранения lease объектов, которые поддерживают механизм heartbeat, используемый для определения состояния узлов. Lease объекты обновляются узлами и используются для повышения масштабируемости и производительности обработки heartbeat сигналов.\n- **Применение**: Управляется самим Kubernetes и не предназначен для пользовательских ресурсов.","x":-4027,"y":697,"width":520,"height":308},
		{"id":"94b7dec34ac2d3ab","type":"text","text":"### kube-public\n\n- **Описание**: Это специальный неймспейс, который доступен для чтения всеми пользователями, в том числе и неаутентифицированными. Он предназначен для хранения данных, которые должны быть общедоступными в кластере.\n- **Применение**: Используется редко, но может быть полезен для данных, которые должны быть доступны всем, например, конфигурационные файлы или общедоступная информация.","x":-4021,"y":287,"width":508,"height":325},
		{"id":"6fbf586f039b44da","type":"text","text":"\n### kube-system\n\n- **Описание**: Этот неймспейс зарезервирован для системных компонентов Kubernetes. В нем размещаются поды и сервисы, которые обеспечивают функционирование кластера, такие как API сервер, контроллеры, DNS сервер и другие.\n- **Применение**: Никогда не использовать для развертывания пользовательских приложений. Только системные компоненты Kubernetes.","x":-3993,"y":-132,"width":480,"height":324},
		{"id":"44ca7bbf3b9ed8e6","type":"text","text":"### default\n\n- **Описание**: Это стандартный неймспейс, который используется, если не указан другой неймспейс. Все ресурсы, созданные без указания неймспейса, по умолчанию попадают в `default`.\n- **Применение**: Подходит для небольших кластеров или при разработке, когда нет необходимости в сложной изоляции ресурсов.","x":-3970,"y":-523,"width":463,"height":312},
		{"id":"438a7e9cb759a5fb","type":"text","text":"### Secret\n- **Безопасность**: Данные в Secret хранятся в зашифрованном виде (base64-encoding) и могут быть настроены для более безопасного хранения в etcd (например, с помощью TLS).\n- **Передача данных в контейнеры**: Как и ConfigMap, данные из Secret могут быть переданы в контейнеры как переменные окружения или монтированы как файлы.\n- **Секретность данных**: Доступ к Secret ограничен правилами RBAC (Role-Based Access Control), что позволяет контролировать, кто и какие секреты может использовать.\n- **Использование с TLS**: Secret часто используется для хранения TLS-сертификатов для обеспечения безопасности связи.","x":1006,"y":-893,"width":740,"height":331},
		{"id":"a0d44ac400423cdf","type":"text","text":"### HelmCharts\nэто пакеты, используемые в Helm, менеджере пакетов для Kubernetes, который упрощает управление Kubernetes приложениями. Helm Charts позволяют описывать, устанавливать и управлять комплексными приложениями Kubernetes в удобной и повторяемой форме. Вот более подробное описание Helm Charts и их использования:","x":1004,"y":-474,"width":742,"height":300},
		{"id":"dfc9641857affbba","type":"file","file":"kubernetes/img/Pasted image 20240718153530.png","x":-1140,"y":-3120,"width":719,"height":388},
		{"id":"bccbb17f7f37bc08","type":"text","text":"### **Kubelet**:\n\n- Агент, работающий на каждом узле в кластере. Он отвечает за обеспечение запуска контейнеров в подах, мониторинг их состояния и сообщение об этом в контрольный план (Control Plane).","x":-2370,"y":-2552,"width":430,"height":215},
		{"id":"b19c0592d7d72663","type":"text","text":"### Remote","x":-1727,"y":-523,"width":250,"height":60},
		{"id":"6072a80f64dd9b7c","type":"text","text":"### Local","x":-1727,"y":-373,"width":250,"height":60},
		{"id":"aa486ce56f5fadb0","type":"text","text":"### Volume\nэто абстракция, позволяющая контейнерам в поде иметь доступ к общему хранилищу данных. Том предоставляет файловую систему, которую могут использовать один или несколько контейнеров, и помогает решить проблемы, связанные с временными файловыми системами, которые используются в контейнерах и теряются при их перезапуске.","x":-1352,"y":-523,"width":514,"height":241},
		{"id":"847d89682c27785b","type":"text","text":"Хранилища","x":-674,"y":-433,"width":250,"height":60},
		{"id":"ce019ac64901d23c","type":"file","file":"kubernetes/img/volume.png","x":-1295,"y":-893,"width":400,"height":290},
		{"id":"79c585ea03993b4d","type":"text","text":"### MasterNode\nотвечают за управление и координацию всего кластера. Эти процессы работают на одном или нескольких узлах, которые называются мастер-узлами (master nodes). Они обеспечивают выполнение задач, таких как управление состоянием кластера, планирование подов, поддержка сетевого взаимодействия и масштабирование. Вот основные компоненты мастер-процессов:","x":-1320,"y":-1592,"width":400,"height":323},
		{"id":"8a5e31b771f53cfc","type":"text","text":"- **etcd**:\n    \n    - **Описание**: Надежное и высокодоступное распределенное хранилище ключ-значение, используемое для хранения всех данных кластера.\n    - **Функции**:\n        - Хранение конфигурации и состояния кластера.\n        - Обеспечение согласованности данных между всеми компонентами кластера.","x":-2818,"y":-1742,"width":448,"height":349},
		{"id":"f7b1fbf1e64c734d","type":"text","text":"### **apiserver**:\n\n- **Описание**: Основной интерфейс для всех компонентов Kubernetes. Он предоставляет REST API для взаимодействия с контрольным планом.\n- **Функции**:\n    - Принимает запросы от пользователей, других компонентов и внешних агентов.\n    - Аутентифицирует и авторизует запросы.\n    - Валидирует и конфигурирует данные объекта API.","x":-2748,"y":-2185,"width":460,"height":360},
		{"id":"4901f7d1611df11d","type":"text","text":"### **controller-manager**:\n\n- **Описание**: Запускает контроллеры, которые следят за состоянием кластера и управляют им.\n- **Функции**:\n    - Node Controller: Отслеживает узлы и обрабатывает их состояние.\n    - Replication Controller: Обеспечивает количество реплик подов.\n    - Endpoints Controller: Управляет объектами Endpoints.\n    - Service Account & Token Controllers: Создает учетные записи сервисов и токены доступа.","x":-2676,"y":-792,"width":472,"height":391},
		{"id":"131c0b0821b81001","type":"file","file":"kubernetes/img/Pasted image 20240718154549.png","x":-3117,"y":-739,"width":299,"height":399},
		{"id":"e9331a956c35cec2","type":"file","file":"kubernetes/img/Pasted image 20240718154511.png","x":-3158,"y":-2315,"width":188,"height":399},
		{"id":"a79af547e3219fd4","type":"file","file":"kubernetes/img/Pasted image 20240718154610.png","x":-3333,"y":-1806,"width":275,"height":400},
		{"id":"20017b196ebe5e76","type":"text","text":"- **scheduler**:\n    \n    - **Описание**: Компонент, который отвечает за назначение подов на узлы кластера.\n    - **Функции**:\n        - Читает незапланированные поды из API-сервера.\n        - Находит подходящий узел для каждого пода на основе ресурсов, ограничений и политик размещения.\n        - Записывает решение обратно в API-сервер.","x":-2736,"y":-1268,"width":448,"height":340},
		{"id":"9acf0bdafe82fd8c","type":"file","file":"kubernetes/img/Pasted image 20240718154525.png","x":-3241,"y":-1293,"width":255,"height":400},
		{"id":"140854cd87100641","type":"text","text":"**Node**","x":-259,"y":-1592,"width":250,"height":60}
	],
	"edges":[
		{"id":"6e3d88c637dcfbf4","fromNode":"4d020d06defbd81e","fromSide":"top","toNode":"140854cd87100641","toSide":"bottom"},
		{"id":"cf75687f3f797d84","fromNode":"140854cd87100641","fromSide":"top","toNode":"668f50532e8bb94e","toSide":"bottom"},
		{"id":"d8f455715cfd841b","fromNode":"4d020d06defbd81e","fromSide":"bottom","toNode":"70147d1929b68f23","toSide":"top"},
		{"id":"0a5bef81d5fea8ca","fromNode":"70147d1929b68f23","fromSide":"bottom","toNode":"f9651a0a9f27b756","toSide":"top"},
		{"id":"5a4fa09308f1288f","fromNode":"70147d1929b68f23","fromSide":"bottom","toNode":"f62f83f0b9673c07","toSide":"top"},
		{"id":"26404c2f350cab22","fromNode":"4d020d06defbd81e","fromSide":"right","toNode":"f93078df170b53ad","toSide":"left"},
		{"id":"d26bbdc80a99f8b4","fromNode":"f93078df170b53ad","fromSide":"right","toNode":"4fc9fc885510ead4","toSide":"left"},
		{"id":"74122c24027d45c9","fromNode":"f93078df170b53ad","fromSide":"right","toNode":"438a7e9cb759a5fb","toSide":"left"},
		{"id":"89690eee832af55b","fromNode":"f93078df170b53ad","fromSide":"right","toNode":"a0d44ac400423cdf","toSide":"left"},
		{"id":"5a3da3171b925b11","fromNode":"4d020d06defbd81e","fromSide":"bottom","toNode":"36d3b5beb8169f80","toSide":"top"},
		{"id":"e4dfc0070f317697","fromNode":"4d020d06defbd81e","fromSide":"bottom","toNode":"016689b1b21be44b","toSide":"top"},
		{"id":"f61c048e4bc99849","fromNode":"4d020d06defbd81e","fromSide":"bottom","toNode":"3ae8bac90fa1e6ce","toSide":"right"},
		{"id":"b58c14076e53a83e","fromNode":"668f50532e8bb94e","fromSide":"top","toNode":"22343fce03233bc0","toSide":"bottom"},
		{"id":"0228c215ab14a252","fromNode":"668f50532e8bb94e","fromSide":"top","toNode":"5594d1563298c0ac","toSide":"bottom"},
		{"id":"1b069d1640fe2491","fromNode":"f9651a0a9f27b756","fromSide":"bottom","toNode":"f03f9fdc2215c12b","toSide":"top"},
		{"id":"5b80c5b9d86721b7","fromNode":"0dbaf166e6d991f0","fromSide":"right","toNode":"6ee3f4ecc7fca767","toSide":"left"},
		{"id":"fae90c69c952b65c","fromNode":"f03f9fdc2215c12b","fromSide":"left","toNode":"6ee3f4ecc7fca767","toSide":"right"},
		{"id":"44f6ce20b1f93c7b","fromNode":"f62f83f0b9673c07","fromSide":"bottom","toNode":"a7e7042dd67a72fe","toSide":"top"},
		{"id":"e9f0c1c412be2b4b","fromNode":"f62f83f0b9673c07","fromSide":"right","toNode":"91ea9363d4baff95","toSide":"left"},
		{"id":"cdafcd15bce740d0","fromNode":"f62f83f0b9673c07","fromSide":"right","toNode":"9810bbcce334bef4","toSide":"left"},
		{"id":"4bf5e2b37068e49e","fromNode":"f62f83f0b9673c07","fromSide":"right","toNode":"768b2867608508ef","toSide":"left"},
		{"id":"a3159beb8cc6ad96","fromNode":"f62f83f0b9673c07","fromSide":"right","toNode":"9bc9d051d8d83ba8","toSide":"left"},
		{"id":"9d2c0efd76ca2df7","fromNode":"f62f83f0b9673c07","fromSide":"right","toNode":"77907ff8a3f4063c","toSide":"left"},
		{"id":"392698ad49274853","fromNode":"4fc9fc885510ead4","fromSide":"top","toNode":"d91195adb900b074","toSide":"bottom"},
		{"id":"6a75ae88b7a73feb","fromNode":"438a7e9cb759a5fb","fromSide":"right","toNode":"fac02a87d2c32066","toSide":"left"},
		{"id":"dc164470acadb0aa","fromNode":"aa486ce56f5fadb0","fromSide":"top","toNode":"ce019ac64901d23c","toSide":"bottom"},
		{"id":"83a193486ab4618f","fromNode":"aa486ce56f5fadb0","fromSide":"left","toNode":"b19c0592d7d72663","toSide":"right"},
		{"id":"e069997f43ae132c","fromNode":"aa486ce56f5fadb0","fromSide":"left","toNode":"6072a80f64dd9b7c","toSide":"right"},
		{"id":"728643c006d6c965","fromNode":"4d020d06defbd81e","fromSide":"left","toNode":"847d89682c27785b","toSide":"right"},
		{"id":"318a118078d7a834","fromNode":"847d89682c27785b","fromSide":"left","toNode":"aa486ce56f5fadb0","toSide":"right"},
		{"id":"844008e7046c5946","fromNode":"36d3b5beb8169f80","fromSide":"bottom","toNode":"3e129a8b23a766cd","toSide":"top"},
		{"id":"a9ab095bf1b52afd","fromNode":"36d3b5beb8169f80","fromSide":"bottom","toNode":"751e633122d6813f","toSide":"top"},
		{"id":"c058726960dcdb9e","fromNode":"36d3b5beb8169f80","fromSide":"bottom","toNode":"3ddfd91fb3e56bef","toSide":"top"},
		{"id":"1023d88f6fa9fd0e","fromNode":"36d3b5beb8169f80","fromSide":"bottom","toNode":"3f21ab437c765971","toSide":"top"},
		{"id":"6b593da944527220","fromNode":"4d020d06defbd81e","fromSide":"bottom","toNode":"3e6400659c6d5b84","toSide":"top"},
		{"id":"7633ac051d3edea2","fromNode":"016689b1b21be44b","fromSide":"left","toNode":"6d9307044468ca3a","toSide":"right"},
		{"id":"a3c9d6cab000131c","fromNode":"016689b1b21be44b","fromSide":"left","toNode":"d2f339f29628d7ef","toSide":"right"},
		{"id":"a084db42a285230e","fromNode":"016689b1b21be44b","fromSide":"left","toNode":"c7391aea8029446e","toSide":"right"},
		{"id":"9cfa130b0aef8866","fromNode":"016689b1b21be44b","fromSide":"left","toNode":"671dd9c62ce45274","toSide":"right"},
		{"id":"0277cbbce7b4d2c3","fromNode":"016689b1b21be44b","fromSide":"bottom","toNode":"1e6da028a27c4e86","toSide":"top"},
		{"id":"735349cb3f1c07bd","fromNode":"f9651a0a9f27b756","fromSide":"bottom","toNode":"0dbaf166e6d991f0","toSide":"top"},
		{"id":"27322245d458217d","fromNode":"0dbaf166e6d991f0","fromSide":"bottom","toNode":"6544cb509ab709f4","toSide":"top"},
		{"id":"7c4ffbeb1116c1b3","fromNode":"0dbaf166e6d991f0","fromSide":"bottom","toNode":"4433398e21c9c45f","toSide":"top"},
		{"id":"5a65dff9e52714ca","fromNode":"0dbaf166e6d991f0","fromSide":"bottom","toNode":"6899a773894d368b","toSide":"top"},
		{"id":"6a4404507f932c72","fromNode":"f03f9fdc2215c12b","fromSide":"bottom","toNode":"4433398e21c9c45f","toSide":"top"},
		{"id":"f452317716bda8e2","fromNode":"fbf285dbfffcd42b","fromSide":"bottom","toNode":"deaaf8cd63daed72","toSide":"top"},
		{"id":"7acc39029da02a46","fromNode":"6544cb509ab709f4","fromSide":"bottom","toNode":"4e770c681e8d78af","toSide":"top"},
		{"id":"681c610020904d84","fromNode":"6544cb509ab709f4","fromSide":"bottom","toNode":"cb9d56078e32b083","toSide":"top"},
		{"id":"055f1f369980d423","fromNode":"6544cb509ab709f4","fromSide":"bottom","toNode":"bef4fe9d24534697","toSide":"top"},
		{"id":"3c9d2ecd7ff9b235","fromNode":"6544cb509ab709f4","fromSide":"bottom","toNode":"f3d6988f9bbbb579","toSide":"top"},
		{"id":"607cd672e06653d6","fromNode":"f03f9fdc2215c12b","fromSide":"bottom","toNode":"6544cb509ab709f4","toSide":"top"},
		{"id":"5ffe2eaa5e3af6b0","fromNode":"6544cb509ab709f4","fromSide":"left","toNode":"58d629d841389122","toSide":"right"},
		{"id":"6e44ce3d83db4a79","fromNode":"f03f9fdc2215c12b","fromSide":"bottom","toNode":"fbf285dbfffcd42b","toSide":"top"},
		{"id":"445f18411364b26c","fromNode":"4433398e21c9c45f","fromSide":"bottom","toNode":"defb77166ddc390d","toSide":"top"},
		{"id":"7fd6526acd94f5b1","fromNode":"4433398e21c9c45f","fromSide":"bottom","toNode":"a63bd30d15509b6c","toSide":"top"},
		{"id":"1d806eee259d80ba","fromNode":"4433398e21c9c45f","fromSide":"bottom","toNode":"8a64420c40df7f7f","toSide":"top"},
		{"id":"288cca388976da4b","fromNode":"4433398e21c9c45f","fromSide":"bottom","toNode":"70152dd31b0c0689","toSide":"top"},
		{"id":"ddba779d7a074096","fromNode":"6899a773894d368b","fromSide":"bottom","toNode":"48ee7df233834de6","toSide":"top"},
		{"id":"518f16dcd477c58d","fromNode":"6899a773894d368b","fromSide":"bottom","toNode":"a3ee98d05d9a5391","toSide":"top"},
		{"id":"7a5af0288caf44d6","fromNode":"6899a773894d368b","fromSide":"bottom","toNode":"23a448b91ea3750e","toSide":"top"},
		{"id":"75caee0632e9317f","fromNode":"6899a773894d368b","fromSide":"bottom","toNode":"440c3ef48fcc563f","toSide":"top"},
		{"id":"b6d222c861743fbf","fromNode":"3ae8bac90fa1e6ce","fromSide":"left","toNode":"462c8495c65806b2","toSide":"right"},
		{"id":"2828608cb1cc7510","fromNode":"462c8495c65806b2","fromSide":"left","toNode":"6fbf586f039b44da","toSide":"right"},
		{"id":"c15098ef86f16925","fromNode":"462c8495c65806b2","fromSide":"left","toNode":"94b7dec34ac2d3ab","toSide":"right"},
		{"id":"0eb2be1fa7e56527","fromNode":"462c8495c65806b2","fromSide":"left","toNode":"9d55bb54275a2e75","toSide":"right"},
		{"id":"237e2e6ec80dd45e","fromNode":"462c8495c65806b2","fromSide":"left","toNode":"44ca7bbf3b9ed8e6","toSide":"right"},
		{"id":"ba55c2c16298a1f5","fromNode":"a0d44ac400423cdf","fromSide":"right","toNode":"1f8f01cdd578c072","toSide":"left"},
		{"id":"938d905c91f9f620","fromNode":"a0d44ac400423cdf","fromSide":"right","toNode":"91f694e8784b43d2","toSide":"left"},
		{"id":"f7d4be4fd7f61ea4","fromNode":"a0d44ac400423cdf","fromSide":"right","toNode":"647c500977e799c4","toSide":"left"},
		{"id":"12384fcdb6c5cb18","fromNode":"140854cd87100641","fromSide":"top","toNode":"dfc9641857affbba","toSide":"right"},
		{"id":"8c1ae787071cf6ce","fromNode":"140854cd87100641","fromSide":"top","toNode":"bccbb17f7f37bc08","toSide":"bottom"},
		{"id":"076ca4a758c469ff","fromNode":"140854cd87100641","fromSide":"top","toNode":"c75cc548fae8f3a2","toSide":"bottom"},
		{"id":"70f914c88d498c4c","fromNode":"140854cd87100641","fromSide":"top","toNode":"5183697fcc4bcf11","toSide":"bottom"},
		{"id":"48fd71a812ae463a","fromNode":"140854cd87100641","fromSide":"top","toNode":"b410ca2c3dd33884","toSide":"bottom"},
		{"id":"53919aad1f272e19","fromNode":"140854cd87100641","fromSide":"left","toNode":"79c585ea03993b4d","toSide":"right"},
		{"id":"be807528534b4f35","fromNode":"79c585ea03993b4d","fromSide":"left","toNode":"f7b1fbf1e64c734d","toSide":"right"},
		{"id":"20034f63b7411aa7","fromNode":"79c585ea03993b4d","fromSide":"left","toNode":"8a5e31b771f53cfc","toSide":"right"},
		{"id":"d8bcef12ac69a9a8","fromNode":"79c585ea03993b4d","fromSide":"left","toNode":"20017b196ebe5e76","toSide":"right"},
		{"id":"e4569a1ab4de9bd2","fromNode":"79c585ea03993b4d","fromSide":"left","toNode":"4901f7d1611df11d","toSide":"right"},
		{"id":"f3f5caca75d4f737","fromNode":"f7b1fbf1e64c734d","fromSide":"left","toNode":"e9331a956c35cec2","toSide":"right"},
		{"id":"4c2fee18e5add92e","fromNode":"20017b196ebe5e76","fromSide":"left","toNode":"9acf0bdafe82fd8c","toSide":"right"},
		{"id":"b9b95584b706c302","fromNode":"4901f7d1611df11d","fromSide":"left","toNode":"131c0b0821b81001","toSide":"right"},
		{"id":"e1fca8da83894c80","fromNode":"8a5e31b771f53cfc","fromSide":"left","toNode":"a79af547e3219fd4","toSide":"right"}
	]
}